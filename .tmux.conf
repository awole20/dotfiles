# C-b is not acceptable -- Vim uses it. C-a isn't either -- Vim uses it. :D
set-option -g prefix C-z
unbind C-b
bind-key C-z last-window

# act like vim
setw -g mode-keys vi
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind-key -r n next-window
bind-key -r p previous-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=green]#H"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-z z <command> to send commands to a TMUX session inside
# another TMUX session
bind-key z send-prefix

# Highlight active window
set-window-option -g window-status-current-style bg=red

# look good
set -g default-terminal "screen-256color"
set -g terminal-overrides 'screen-256color:colors=256'

# scrollback
set -g history-limit 50000

#environemnt variables, for x11, etc. this doesn't work.
set -ga update-environment " DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# move x clipboard into tmux paste buffer
 bind C-p run "tmux set-buffer -- \"$(xsel -o -b)\" tmux paste-buffer"
# move tmux copy buffer into x clipboard
 bind C-y run "tmux show-buffer | xsel -i -b"

#renumber windows, only works in 1.7
set-option -g renumber-windows on

#tmux cursor
set -ag terminal-overrides ',screen*:cvvis=\E[34l\E[?25h'

# Set the current working directory based on the current pane's current
# working directory (if set; if not, use the pane's starting directory)
# when creating # new windows and splits.
bind-key c new-window -c '#{pane_current_path}'
bind-key '"' split-window -c '#{pane_current_path}'
bind-key % split-window -h -c '#{pane_current_path}'
bind-key - split-window -c '#{pane_current_path}'
bind-key / split-window -h -c '#{pane_current_path}'

bind-key C-s set-window-option synchronize-panes

bind-key -r < swap-window -t :-1
bind-key -r > swap-window -t :+1